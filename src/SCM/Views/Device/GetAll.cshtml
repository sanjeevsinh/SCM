@model IEnumerable<SCM.Models.ViewModels.DeviceViewModel>

@{
    ViewData["Title"] = "Devices";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item active">Devices</li>
</ol>

<div id="successMessageContainer" class="alert alert-success" role="alert">
    <span class="glyphicon glyphicon-ok-sign" aria-hidden="true"></span>
    <span class="sr-only">Success:</span>
    <span id="successMessage">@Html.Raw(ViewData["SuccessMessage"])</span>
</div>

<div id="errorMessageContainer" class="alert alert-danger" role="alert">
    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
    <span class="sr-only">Error:</span>
    <span id="errorMessage">@Html.Raw(ViewData["ErrorMessage"])</span>
</div>


<h2>Devices</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Plane)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RequiresSync)
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Plane.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location.SiteName)
            </td>
            <td id="requiresSync_@item.ID" class="checkbox-insync">
                @Html.DisplayFor(modelItem => item.RequiresSync)
            </td>
            <td>
                <input type="submit" id="Sync_@item.ID" value="Sync"
                       data-item='{"id" : "@item.ID"}'
                       class="btn btn-default btn-sync" />
                <input type="submit" id="CheckSync_@item.ID" value="Check Sync"
                       data-item='{"id" : "@item.ID"}'
                       class="btn btn-default btn-checksync" />
            </td>
            <td class="row-spinner spinner-element" id="syncStatus_@item.ID"></td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID } ) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID }) |
                <a asp-controller="Port" asp-action="GetAllByDeviceID" asp-route-id="@item.ID">Ports</a>
            </td>
        </tr>
}
    </tbody>
</table>
@section Scripts {

    <script type="text/javascript">

        (function ($) {

            SCM.Utilities.connectToNetworkSyncHub({
                checkSyncUrl: '/api/devices/{id}/checksync',
                syncUrl: '/api/devices/{id}/sync',
                groupName: 'Devices',
                itemKey: 'ID'
            });

        }(jQuery));

    </script>
}