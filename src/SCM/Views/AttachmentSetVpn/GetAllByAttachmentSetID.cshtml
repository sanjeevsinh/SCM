@model IEnumerable<SCM.Models.ViewModels.VpnViewModel>

@{
    ViewData["Title"] = "VPNs";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Tenant/GetAll">Tenants</a></li>
    <li class="breadcrumb-item"><a href="/AttachmentSet/GetAllByTenantID/@ViewBag.AttachmentSet.TenantID">Attachment Sets - [@ViewBag.AttachmentSet.Tenant.Name]</a></li>
    <li class="breadcrumb-item active">VPNs - [@ViewBag.AttachmentSet.Name]</li>
</ol>

@if (@ViewData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@Html.Raw(ViewData["SuccessMessage"])</div>
}

@if (@ViewData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@Html.Raw(ViewData["ErrorMessage"])</div>
}

<h2>VPNs for Attachment Set '@ViewBag.AttachmentSet.Name'</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Plane)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Region)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VpnTenancyType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VpnTopologyType.VpnProtocolType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VpnTopologyType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tenant)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RequiresSync)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Plane.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Region.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VpnTenancyType.TenancyType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VpnTopologyType.VpnProtocolType.ProtocolType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VpnTopologyType.TopologyType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tenant.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequiresSync)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { VpnID = item.VpnID, AttachmentSetID = ViewBag.AttachmentSet.AttachmentSetID } )
            </td>
        </tr>
}
    </tbody>
</table>
<form asp-action="Sync">
    <input type="hidden" name="id" value="@ViewBag.AttachmentSet.AttachmentSetID"/>
    <input type="submit" id="CheckSync" asp-action="CheckSyncAllByAttachmentSetID" value="Check Sync All" class="btn btn-default" /> |
    <input type="submit" id="Sync" asp-action="SyncAllByAttachmentSetID" value="Sync All" class="btn btn-default" /> |
    <a asp-action="GetAllByTenantID" asp-controller="AttachmentSet" asp-route-id="@ViewBag.AttachmentSet.TenantID">Back to Attachment Sets</a>
</form>
@section Scripts {

    <script type="text/javascript">

        (function ($) {

            var $sync = $('#Sync');
            var $checkSync = $('#CheckSync');

            $sync.on('click', function (e) {

                SCM.Utilities.showSpinner($('body')[0]);
            });

            $checkSync.on('click', function (e) {

                SCM.Utilities.showSpinner($('body')[0]);
            });

        }(jQuery));

    </script>
}
