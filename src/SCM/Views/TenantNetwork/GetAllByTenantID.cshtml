@model IEnumerable<SCM.Models.ViewModels.TenantNetworkViewModel>

@{
    ViewData["Title"] = "Tenant Networks";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Tenant/GetAll">Tenants</a></li>
    <li class="breadcrumb-item active">Networks - [@ViewBag.Tenant.Name]</li>
</ol>

<h2>Networks for Tenant '@ViewBag.Tenant.Name'</h2>

<p>
    <a asp-action="Create" asp-route-id="@ViewBag.Tenant.TenantID" asp-route-tenantID="@Context.Request.Query["tenantID"]">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.IpPrefix)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Length)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AllowExtranet)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.IpPrefix)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Length)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AllowExtranet)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.TenantNetworkID, tenantID = Context.Request.Query["tenantID"] }) |
                @Html.ActionLink("Details", "Details", new { id=item.TenantNetworkID, tenantID = Context.Request.Query["tenantID"] }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.TenantNetworkID, tenantID = Context.Request.Query["tenantID"] })
            </td>
        </tr>
}
    </tbody>
</table>
<div>
    <a asp-controller="Tenant" asp-action="GetAll">Back to Tenants</a>
</div>
