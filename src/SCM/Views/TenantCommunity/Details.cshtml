@model SCM.Models.ViewModels.TenantCommunityViewModel

@{
    ViewData["Title"] = "Details";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Tenant/GetAll">Tenants</a></li>
    <li class="breadcrumb-item"><a href="/TenantCommunity/GetAllByTenantID/@Model.TenantID">Communities - [@ViewBag.Tenant.Name]</a></li>
    <li class="breadcrumb-item active">Details - [@Model.AutonomousSystemNumber:@Model.Number]</li>
</ol>

<h2>Details of Tenant Community '@Model.AutonomousSystemNumber : @Model.Number'</h2>

<div>
    <h4>Tenant Community</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.AutonomousSystemNumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.AutonomousSystemNumber)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Number)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Number)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.AllowExtranet)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.AllowExtranet)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Tenant)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Tenant.Name)
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { id = Model.TenantCommunityID, tenantID = Context.Request.Query["tenantID"] }) |
    <a asp-action="GetAllByTenantID" asp-route-id="@Model.TenantID">Back to List</a>
</div>
