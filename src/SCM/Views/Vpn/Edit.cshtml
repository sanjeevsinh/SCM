@model SCM.Models.ViewModels.VpnViewModel

@{
    ViewData["Title"] = "Edit";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Vpn/GetAll">VPNs</a></li>
    <li class="breadcrumb-item active">Edit - [@Model.Name]</li>
</ol>

<h2>Edit VPN @Model.Name</h2>

<form asp-action="Edit">
    <div class="form-horizontal">
        <hr />
        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
        <input type="hidden" asp-for="VpnID" />
        <input type="hidden" asp-for="TenantID" />
        <input type="hidden" asp-for="VpnTopologyTypeID" />
        <input type="hidden" asp-for="PlaneID" />
        <input type="hidden" asp-for="Name" />
        <input type="hidden" asp-for="RowVersion" />
        <div class="form-group">
            <label asp-for="Description" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Region" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="RegionID" class="form-control" asp-items="ViewBag.RegionID">
                    <option value="">-- Optionally Select Region --</option>
                </select>
                <span asp-validation-for="RegionID" class="text-danger" />
            </div>
        </div>
        <div class="form-group">
            <label asp-for="VpnTenancyType" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="VpnTenancyTypeID" class="form-control" asp-items="ViewBag.VpnTenancyTypeID">
                    <option value="">-- Select Tenancy Type --</option>
                </select>
                <span asp-validation-for="VpnTenancyTypeID" class="text-danger"></span>
            </div>
        </div>
@{
    var topologyType = Model.VpnTopologyType;
    if (topologyType != null)
    {
        var protocolType = topologyType.VpnProtocolType;
        if (protocolType != null)
        {
            if (protocolType.ProtocolType == "IP" && topologyType.TopologyType == "Hub-and-Spoke")
            {

                <div class="form-group">
                    <div class="col-md-2">
                    </div>
                    <div class="col-md-10">
                        <label class="checkbox-inline">
                            <input type="checkbox" asp-for="IsExtranet" data-toggle="tooltip" title="Enable the VPN to support Extranet">
                            <label asp-for="IsExtranet"></label>
                        </label>
                    </div>
                </div>
            }
        }
    }
}
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="GetAll">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
