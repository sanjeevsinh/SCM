@model IEnumerable<SCM.Models.ViewModels.VpnViewModel>

@{
    ViewData["Title"] = "VPNs";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item active">VPNs</li>
</ol>

@if (@ViewData["SuccessMessage"] != null)
{
    <div id="successMessageContainer" class="alert alert-success" role="alert">
        <span class="glyphicon glyphicon-ok-sign" aria-hidden="true"></span>
        <span class="sr-only">Success:</span>
        <span id="successMessage">@Html.Raw(ViewData["SuccessMessage"])</span>
    </div>
}

@if (@ViewData["ErrorMessage"] != null)
{
    <div id="errorMessageContainer" class="alert alert-danger" role="alert">
        <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
        <span class="sr-only">Error:</span>
        <span id="errorMessage">@Html.Raw(ViewData["ErrorMessage"])</span>
    </div>
}

<h2>VPNs</h2>

<p>
    <a asp-action="CreateStep1">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Plane)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Region)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VpnTenancyType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VpnTopologyType.VpnProtocolType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VpnTopologyType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tenant)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RequiresSync)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Plane.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Region.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VpnTenancyType.TenancyType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VpnTopologyType.VpnProtocolType.ProtocolType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VpnTopologyType.TopologyType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tenant.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequiresSync)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.VpnID }) |
                @Html.ActionLink("Details", "Details", new { VpnID = item.VpnID } ) |
                @Html.ActionLink("Delete", "Delete", new { id = item.VpnID }) |
                <a asp-controller="RouteTarget" asp-action="GetAllByVpnID" asp-route-id="@item.VpnID">Route Targets</a> |
                <a asp-controller="VpnAttachmentSet" asp-action="GetAllByVpnID" asp-route-id="@item.VpnID">Attachment Sets</a>
            </td>
        </tr>
}
    </tbody>
</table>
