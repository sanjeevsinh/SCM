@model IEnumerable<SCM.Models.ViewModels.AttachmentSetVrfViewModel>

@{
    ViewData["Title"] = "Attachment Set VRFs";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Tenant/GetAll">Tenants</a></li>
    <li class="breadcrumb-item"><a href="/AttachmentSet/GetAllByTenantID/@ViewBag.AttachmentSet.TenantID">Attachment Sets - [@ViewBag.AttachmentSet.Tenant.Name]</a></li>
    <li class="breadcrumb-item active">Attachment Set VRFs - [@ViewBag.AttachmentSet.Name]</li>
</ol>

<h2>VRFs for Attachment Set '@ViewBag.AttachmentSet.Name'</h2>

@if (@ViewData["ErrorMessage"] != null)
{
    <div id="errorMessageContainer" class="alert alert-danger" role="alert">
        <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
        <span class="sr-only">Error:</span>
        <span id="errorMessage">@Html.Raw(ViewData["ErrorMessage"])</span>
    </div>
}

@if (@ViewData["SuccessMessage"] != null)
{
    <div id="successMessageContainer" class="alert alert-success" role="alert">
        <span class="glyphicon glyphicon-ok-sign" aria-hidden="true"></span>
        <span class="sr-only">Success:</span>
        <span id="successMessage">@Html.Raw(ViewData["SuccessMessage"])</span>
    </div>
}

<p>
    <a asp-action="CreateStep1" asp-route-id="@ViewBag.AttachmentSet.AttachmentSetID" asp-route-tenantID="@Context.Request.Query["tenantID"]">Add New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Vrf)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Preference)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Vrf.Device.Location.SubRegion.Region)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Vrf.Device.Location.SubRegion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Vrf.Device.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Vrf.Device.Plane)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Vrf.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Preference)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Vrf.Device.Location.SubRegion.Region.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Vrf.Device.Location.SubRegion.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Vrf.Device.Location.SiteName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Vrf.Device.Plane.Name)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.AttachmentSetVrfID, tenantID = Context.Request.Query["tenantID"] }) |
                @Html.ActionLink("Details", "Details", new { id = item.AttachmentSetVrfID, tenantID = Context.Request.Query["tenantID"] }) |
                @Html.ActionLink("Remove", "Delete", new { id = item.AttachmentSetVrfID, tenantID = Context.Request.Query["tenantID"] })
            </td>
        </tr>
    }
    </tbody>
</table>
<a asp-controller="AttachmentSet" asp-action="GetAllByTenantID" asp-route-id="@ViewBag.AttachmentSet.TenantID">Back to Attachment Sets</a>
