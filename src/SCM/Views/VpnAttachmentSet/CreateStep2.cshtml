@model SCM.Models.ViewModels.VpnAttachmentSetViewModel

@{
    ViewData["Title"] = "CreateStep2";
}

<form asp-action="Create">
    <div class="form-horizontal">
        <h4>Add Attachment Set to VPN '@ViewBag.Vpn.Name'</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
        <input type="hidden" asp-for="VpnID" value="@ViewBag.VpnAttachmentSetSelection.VpnID" />
        <input type="hidden" name="TenantID" value="@ViewBag.VpnAttachmentSetSelection.TenantID" />
        <div class="form-group">
            <label asp-for="AttachmentSet" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="AttachmentSetID" class="form-control" asp-items="ViewBag.AttachmentSetID">
                    <option value="">-- Select an Attachment Set --</option>
                </select>
                <span asp-validation-for="AttachmentSetID" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" asp-route-tenantID="@Context.Request.Query["tenantID"]" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="GetAllByVpnID" asp-route-id="@ViewBag.Vpn.VpnID" asp-route-tenantID="@Context.Request.Query["tenantID"]">Back to Attachment Sets</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
